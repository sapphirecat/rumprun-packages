diff -Nur a/ext/opcache/config.m4 b/ext/opcache/config.m4
--- a/ext/opcache/config.m4	2016-08-17 15:51:56.000000000 -0400
+++ b/ext/opcache/config.m4	2016-08-27 18:32:46.342025524 -0400
@@ -403,7 +403,7 @@
 	Optimizer/optimize_temp_vars_5.c \
 	Optimizer/nop_removal.c \
 	Optimizer/compact_literals.c,
-	shared,,-DZEND_ENABLE_STATIC_TSRMLS_CACHE=1,,yes)
+	$ext_shared,,-DZEND_ENABLE_STATIC_TSRMLS_CACHE=1,,yes)
 
   PHP_ADD_BUILD_DIR([$ext_builddir/Optimizer], 1)
   PHP_ADD_EXTENSION_DEP(opcache, pcre)
diff -Nur a/ext/opcache/ZendAccelerator.c b/ext/opcache/ZendAccelerator.c
--- a/ext/opcache/ZendAccelerator.c	2016-08-17 15:51:56.000000000 -0400
+++ b/ext/opcache/ZendAccelerator.c	2016-08-27 17:50:55.554824089 -0400
@@ -28,6 +28,7 @@
 #include "zend_persist.h"
 #include "zend_shared_alloc.h"
 #include "zend_accelerator_module.h"
+#include "zend_accelerator_startup.h"
 #include "zend_accelerator_blacklist.h"
 #include "zend_list.h"
 #include "zend_execute.h"
@@ -106,6 +107,9 @@
 
 /* true globals, no need for thread safety */
 zend_bool accel_startup_ok = 0;
+#if defined(COMPILE_DL_OPCACHE)
+zend_bool zend_accel_startup_ok = 0;
+#endif
 static char *zps_failure_reason = NULL;
 char *zps_api_failure_reason = NULL;
 #if ENABLE_FILE_CACHE_FALLBACK
@@ -2483,7 +2487,7 @@
 	return SUCCESS;
 }
 
-static void accel_globals_ctor(zend_accel_globals *accel_globals)
+void accel_globals_ctor(zend_accel_globals *accel_globals)
 {
 #if defined(COMPILE_DL_OPCACHE) && defined(ZTS)
 	ZEND_TSRMLS_CACHE_UPDATE();
@@ -2496,7 +2500,7 @@
 	free(Z_PTR_P(zv));
 }
 
-static void accel_globals_dtor(zend_accel_globals *accel_globals)
+void accel_globals_dtor(zend_accel_globals *accel_globals)
 {
 	if (accel_globals->function_table.nTableSize) {
 		accel_globals->function_table.pDestructor = accel_globals_internal_func_dtor;
@@ -2645,21 +2649,19 @@
 	zend_function *func;
 	zend_ini_entry *ini_entry;
 
-#ifdef ZTS
-	accel_globals_id = ts_allocate_id(&accel_globals_id, sizeof(zend_accel_globals), (ts_allocate_ctor) accel_globals_ctor, (ts_allocate_dtor) accel_globals_dtor);
-#else
-	accel_globals_ctor(&accel_globals);
-#endif
-
 #ifdef ZEND_WIN32
 	_setmaxstdio(2048); /* The default configuration is limited to 512 stdio files */
 #endif
 
+#if defined(COMPILE_DL_OPCACHE)
+	/* in shared mode, we are properly loaded via zend_extension and must start our module */
+	zend_accel_startup_ok = 1;
 	if (start_accel_module() == FAILURE) {
 		accel_startup_ok = 0;
 		zend_error(E_WARNING, ACCELERATOR_PRODUCT_NAME ": module registration failed!");
 		return FAILURE;
 	}
+#endif
 
 	accel_gen_system_id();
 
diff -Nur a/ext/opcache/zend_accelerator_module.c b/ext/opcache/zend_accelerator_module.c
--- a/ext/opcache/zend_accelerator_module.c	2016-08-17 15:51:56.000000000 -0400
+++ b/ext/opcache/zend_accelerator_module.c	2016-08-27 18:06:27.689946964 -0400
@@ -26,6 +26,7 @@
 #include "zend_API.h"
 #include "zend_shared_alloc.h"
 #include "zend_accelerator_blacklist.h"
+#include "zend_accelerator_startup.h"
 #include "php_ini.h"
 #include "SAPI.h"
 #include "zend_virtual_cwd.h"
@@ -387,8 +388,20 @@
 {
 	(void)type; /* keep the compiler happy */
 
+	ZEND_INIT_MODULE_GLOBALS(accel, accel_globals_ctor, accel_globals_dtor);
 	REGISTER_INI_ENTRIES();
 
+#if defined(COMPILE_DL_OPCACHE)
+	/* in shared mode, we must load via zend_extension */
+	if (zend_accel_startup_ok == 0) {
+		zend_error(E_WARNING, "OPCache MUST be loaded as a Zend extension");
+		return FAILURE;
+	}
+#else
+	/* in static mode, modules are initialized first, so we schedule the zend_extension to start later */
+	return zend_register_extension(&zend_extension_entry, NULL);
+#endif
+
 	return SUCCESS;
 }
 
@@ -508,7 +521,7 @@
 	DISPLAY_INI_ENTRIES();
 }
 
-static zend_module_entry accel_module_entry = {
+zend_module_entry accel_module_entry = {
 	STANDARD_MODULE_HEADER,
 	ACCELERATOR_PRODUCT_NAME,
 	accel_functions,
diff -Nur a/ext/opcache/zend_accelerator_startup.h b/ext/opcache/zend_accelerator_startup.h
--- a/ext/opcache/zend_accelerator_startup.h	1969-12-31 19:00:00.000000000 -0500
+++ b/ext/opcache/zend_accelerator_startup.h	2016-08-27 17:52:50.070893848 -0400
@@ -0,0 +1,37 @@
+/*
+   +----------------------------------------------------------------------+
+   | Zend OPcache                                                         |
+   +----------------------------------------------------------------------+
+   | Copyright (c) 1998-2016 The PHP Group                                |
+   +----------------------------------------------------------------------+
+   | This source file is subject to version 3.01 of the PHP license,      |
+   | that is bundled with this package in the file LICENSE, and is        |
+   | available through the world-wide-web at the following url:           |
+   | http://www.php.net/license/3_01.txt                                  |
+   | If you did not receive a copy of the PHP license and are unable to   |
+   | obtain it through the world-wide-web, please send a note to          |
+   | license@php.net so we can mail you a copy immediately.               |
+   +----------------------------------------------------------------------+
+   | Authors: Andi Gutmans <andi@zend.com>                                |
+   |          Zeev Suraski <zeev@zend.com>                                |
+   |          Stanislav Malyshev <stas@zend.com>                          |
+   |          Dmitry Stogov <dmitry@zend.com>                             |
+   +----------------------------------------------------------------------+
+*/
+
+#ifndef ZEND_ACCELERATOR_STARTUP_H
+#define ZEND_ACCELERATOR_STARTUP_H
+
+#include "Zend/zend_modules.h"
+#include "Zend/zend_extensions.h"
+
+extern zend_module_entry accel_module_entry;
+#define phpext_opcache_ptr &accel_module_entry
+
+#if defined(COMPILE_DL_OPCACHE)
+extern zend_bool zend_accel_startup_ok;
+#else
+extern zend_extension zend_extension_entry;
+#endif
+
+#endif
